// <auto-generated />
using System;
using Gingerbrich_backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Gingerbrich_backend.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20200518163357_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Gingerbrich_backend.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("est");

                    b.Property<string>("name");

                    b.Property<string>("slogan");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Gender");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Notification", b =>
                {
                    b.Property<int>("customerId");

                    b.Property<int>("notificationId");

                    b.HasKey("customerId", "notificationId");

                    b.HasIndex("notificationId");

                    b.ToTable("Customer_Notification");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Permission", b =>
                {
                    b.Property<int>("customerId");

                    b.Property<int>("permisssionId");

                    b.Property<int?>("permissionId");

                    b.HasKey("customerId", "permisssionId");

                    b.HasIndex("permissionId");

                    b.ToTable("Customer_Permission");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("code");

                    b.Property<DateTime>("end_time");

                    b.Property<DateTime>("start_time");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Product_Id");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("Url")
                        .IsUnique();

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("date");

                    b.Property<string>("text");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Customer_Id");

                    b.Property<DateTime>("date");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Order_Product", b =>
                {
                    b.Property<int>("OrderId");

                    b.Property<int>("ProductId");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("Order_Product");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Customer_Id");

                    b.Property<double>("amount");

                    b.Property<DateTime>("date");

                    b.HasKey("Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("type");

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("brand_name");

                    b.Property<string>("color");

                    b.Property<string>("discription");

                    b.Property<string>("name");

                    b.Property<string>("size");

                    b.Property<string>("stock_left");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Product_Discount", b =>
                {
                    b.Property<int>("productId");

                    b.Property<int>("discountId");

                    b.HasKey("productId", "discountId");

                    b.HasIndex("discountId");

                    b.ToTable("Product_Discount");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Order_Id");

                    b.Property<string>("method");

                    b.HasKey("Id");

                    b.ToTable("Shipping");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Notification", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Customer", "custome")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Notification", "notification")
                        .WithMany()
                        .HasForeignKey("notificationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Permission", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Customer", "customer")
                        .WithMany()
                        .HasForeignKey("customerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Permission", "permission")
                        .WithMany()
                        .HasForeignKey("permissionId");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Order_Product", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Order", "order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Product_Discount", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Discount", "discount")
                        .WithMany()
                        .HasForeignKey("discountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Product", "product")
                        .WithMany()
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
