// <auto-generated />
using System;
using Gingerbrich_backend.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gingerbrich_backend.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20200327210344_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gingerbrich_backend.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("name");

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address");

                    b.Property<string>("email");

                    b.Property<string>("gender");

                    b.Property<string>("id_number");

                    b.Property<string>("name");

                    b.Property<string>("password");

                    b.Property<int>("phone_number");

                    b.Property<string>("surname");

                    b.Property<string>("username");

                    b.HasKey("Id");

                    b.HasIndex("username")
                        .IsUnique()
                        .HasFilter("[username] IS NOT NULL");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Notification", b =>
                {
                    b.Property<int>("Customer_Id");

                    b.Property<int>("Notification_Id");

                    b.HasKey("Customer_Id", "Notification_Id");

                    b.HasIndex("Notification_Id");

                    b.ToTable("Customer_Notification");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Permission", b =>
                {
                    b.Property<int>("Permission_Id");

                    b.Property<int>("Customer_Id");

                    b.HasKey("Permission_Id", "Customer_Id");

                    b.HasAlternateKey("Customer_Id", "Permission_Id");

                    b.ToTable("Customer_Permission");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("code");

                    b.Property<DateTime>("end_time");

                    b.Property<DateTime>("start_time");

                    b.HasKey("Id");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Product_Id");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.HasIndex("Url")
                        .IsUnique()
                        .HasFilter("[Url] IS NOT NULL");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("date");

                    b.Property<string>("text");

                    b.HasKey("Id");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_Id");

                    b.Property<DateTime>("date");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Order_Product", b =>
                {
                    b.Property<int>("Customer_Id");

                    b.Property<int>("Product_Id");

                    b.Property<int?>("User_Id");

                    b.HasKey("Customer_Id", "Product_Id");

                    b.HasIndex("Product_Id");

                    b.HasIndex("User_Id");

                    b.ToTable("Order_Product");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Customer_Id");

                    b.Property<double>("amount");

                    b.Property<DateTime>("date");

                    b.HasKey("Id");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("type");

                    b.HasKey("Id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brand_name");

                    b.Property<string>("color");

                    b.Property<string>("discription");

                    b.Property<string>("size");

                    b.Property<string>("stock_left");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Product_Discount", b =>
                {
                    b.Property<int>("Discount_Id");

                    b.Property<int>("Product_id");

                    b.HasKey("Discount_Id", "Product_id");

                    b.HasIndex("Product_id");

                    b.ToTable("Product_Discount");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Shipping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Order_Id");

                    b.Property<string>("method");

                    b.HasKey("Id");

                    b.ToTable("Shipping");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Notification", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Notification", "Notification")
                        .WithMany()
                        .HasForeignKey("Notification_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Customer_Permission", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("Customer_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("Permission_Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Order_Product", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("User_Id");
                });

            modelBuilder.Entity("Gingerbrich_backend.Models.Product_Discount", b =>
                {
                    b.HasOne("Gingerbrich_backend.Models.Discount", "Discount")
                        .WithMany()
                        .HasForeignKey("Discount_Id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gingerbrich_backend.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("Product_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
